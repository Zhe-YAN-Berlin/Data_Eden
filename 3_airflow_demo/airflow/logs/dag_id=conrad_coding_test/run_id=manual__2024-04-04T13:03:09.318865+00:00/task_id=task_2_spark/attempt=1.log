[2024-04-04T13:03:14.140+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: conrad_coding_test.task_2_spark manual__2024-04-04T13:03:09.318865+00:00 [queued]>
[2024-04-04T13:03:14.147+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: conrad_coding_test.task_2_spark manual__2024-04-04T13:03:09.318865+00:00 [queued]>
[2024-04-04T13:03:14.147+0000] {taskinstance.py:2193} INFO - Starting attempt 1 of 2
[2024-04-04T13:03:14.164+0000] {taskinstance.py:2217} INFO - Executing <Task(DockerOperator): task_2_spark> on 2024-04-04 13:03:09.318865+00:00
[2024-04-04T13:03:14.177+0000] {standard_task_runner.py:60} INFO - Started process 156038 to run task
[2024-04-04T13:03:14.187+0000] {standard_task_runner.py:87} INFO - Running: ['airflow', 'tasks', 'run', 'conrad_coding_test', 'task_2_spark', 'manual__2024-04-04T13:03:09.318865+00:00', '--job-id', '30', '--raw', '--subdir', 'DAGS_FOLDER/dag_spark_multi_source_test_docker.py', '--cfg-path', '/tmp/tmph6ylhj3a']
[2024-04-04T13:03:14.191+0000] {standard_task_runner.py:88} INFO - Job 30: Subtask task_2_spark
[2024-04-04T13:03:14.265+0000] {task_command.py:423} INFO - Running <TaskInstance: conrad_coding_test.task_2_spark manual__2024-04-04T13:03:09.318865+00:00 [running]> on host de-zoomcamp.us-central1-a.c.my-zhe-414813.internal
[2024-04-04T13:03:14.349+0000] {taskinstance.py:2513} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='conrad_coding_test' AIRFLOW_CTX_TASK_ID='task_2_spark' AIRFLOW_CTX_EXECUTION_DATE='2024-04-04T13:03:09.318865+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-04-04T13:03:09.318865+00:00'
[2024-04-04T13:03:14.390+0000] {docker.py:359} INFO - Starting docker container from image sparkhome:latest
[2024-04-04T13:03:14.957+0000] {docker.py:429} INFO - Unsetting extraneous env vars (UTC): 13:03:14
[2024-04-04T13:03:14.977+0000] {docker.py:429} INFO - Finished unsetting extraneous env vars (UTC): 13:03:14
[2024-04-04T13:03:14.983+0000] {docker.py:429} INFO - ++ id -u
[2024-04-04T13:03:14.991+0000] {docker.py:429} INFO - + myuid=0
[2024-04-04T13:03:14.992+0000] {docker.py:429} INFO - ++ id -g
[2024-04-04T13:03:14.994+0000] {docker.py:429} INFO - + mygid=0
[2024-04-04T13:03:14.994+0000] {docker.py:429} INFO - + set +e
[2024-04-04T13:03:14.995+0000] {docker.py:429} INFO - ++ getent passwd 0
[2024-04-04T13:03:14.999+0000] {docker.py:429} INFO - + uidentry=root:x:0:0:root:/root:/bin/bash
[2024-04-04T13:03:15.002+0000] {docker.py:429} INFO - + set -e
[2024-04-04T13:03:15.002+0000] {docker.py:429} INFO - + '[' -z root:x:0:0:root:/root:/bin/bash ']'
[2024-04-04T13:03:15.003+0000] {docker.py:429} INFO - + SPARK_CLASSPATH=':/opt/spark/jars/*'
[2024-04-04T13:03:15.003+0000] {docker.py:429} INFO - + env
[2024-04-04T13:03:15.004+0000] {docker.py:429} INFO - + grep SPARK_JAVA_OPT_
[2024-04-04T13:03:15.004+0000] {docker.py:429} INFO - + sort -t_ -k4 -n
[2024-04-04T13:03:15.005+0000] {docker.py:429} INFO - + sed 's/[^=]*=\(.*\)/\1/g'
[2024-04-04T13:03:15.014+0000] {docker.py:429} INFO - + readarray -t SPARK_EXECUTOR_JAVA_OPTS
[2024-04-04T13:03:15.015+0000] {docker.py:429} INFO - + '[' -n '' ']'
[2024-04-04T13:03:15.015+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T13:03:15.016+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T13:03:15.016+0000] {docker.py:429} INFO - + '[' -n '' ']'
[2024-04-04T13:03:15.017+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T13:03:15.017+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T13:03:15.018+0000] {docker.py:429} INFO - + '[' -z x ']'
[2024-04-04T13:03:15.018+0000] {docker.py:429} INFO - + SPARK_CLASSPATH='/opt/spark/conf::/opt/spark/jars/*'
[2024-04-04T13:03:15.018+0000] {docker.py:429} INFO - + case "$1" in
[2024-04-04T13:03:15.018+0000] {docker.py:429} INFO - + echo 'Non-spark-on-k8s command provided, proceeding in pass-through mode...'
[2024-04-04T13:03:15.018+0000] {docker.py:429} INFO - Non-spark-on-k8s command provided, proceeding in pass-through mode...
[2024-04-04T13:03:15.019+0000] {docker.py:429} INFO - + CMD=("$@")
[2024-04-04T13:03:15.019+0000] {docker.py:429} INFO - + exec /usr/bin/tini -s -- python /opt/spark/etl_task_2.py
[2024-04-04T13:03:18.407+0000] {docker.py:429} INFO - WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/opt/spark/jars/spark-unsafe_2.12-3.2.1.jar) to constructor java.nio.DirectByteBuffer(long,int)
WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[2024-04-04T13:03:18.408+0000] {docker.py:429} INFO - 
[2024-04-04T13:03:19.065+0000] {docker.py:429} INFO - Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
[2024-04-04T13:03:19.066+0000] {docker.py:429} INFO - Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
[2024-04-04T13:03:19.469+0000] {docker.py:429} INFO - 24/04/04 13:03:19 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2024-04-04T13:03:32.847+0000] {docker.py:429} INFO - [Stage 0:>                                                          (0 + 1) / 1]
[2024-04-04T13:03:33.045+0000] {docker.py:429} INFO - 
[2024-04-04T13:03:38.897+0000] {taskinstance.py:1149} INFO - Marking task as SUCCESS. dag_id=conrad_coding_test, task_id=task_2_spark, execution_date=20240404T130309, start_date=20240404T130314, end_date=20240404T130338
[2024-04-04T13:03:38.939+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2024-04-04T13:03:38.959+0000] {taskinstance.py:3312} INFO - 1 downstream tasks scheduled from follow-on schedule check
