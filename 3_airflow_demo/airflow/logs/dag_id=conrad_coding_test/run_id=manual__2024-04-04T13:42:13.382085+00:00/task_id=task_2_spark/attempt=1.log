[2024-04-04T13:42:18.361+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: conrad_coding_test.task_2_spark manual__2024-04-04T13:42:13.382085+00:00 [queued]>
[2024-04-04T13:42:18.368+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: conrad_coding_test.task_2_spark manual__2024-04-04T13:42:13.382085+00:00 [queued]>
[2024-04-04T13:42:18.368+0000] {taskinstance.py:2193} INFO - Starting attempt 1 of 2
[2024-04-04T13:42:18.387+0000] {taskinstance.py:2217} INFO - Executing <Task(DockerOperator): task_2_spark> on 2024-04-04 13:42:13.382085+00:00
[2024-04-04T13:42:18.397+0000] {standard_task_runner.py:60} INFO - Started process 160435 to run task
[2024-04-04T13:42:18.405+0000] {standard_task_runner.py:87} INFO - Running: ['airflow', 'tasks', 'run', 'conrad_coding_test', 'task_2_spark', 'manual__2024-04-04T13:42:13.382085+00:00', '--job-id', '35', '--raw', '--subdir', 'DAGS_FOLDER/dag_spark_multi_source_test_docker.py', '--cfg-path', '/tmp/tmp08selp3j']
[2024-04-04T13:42:18.408+0000] {standard_task_runner.py:88} INFO - Job 35: Subtask task_2_spark
[2024-04-04T13:42:18.457+0000] {task_command.py:423} INFO - Running <TaskInstance: conrad_coding_test.task_2_spark manual__2024-04-04T13:42:13.382085+00:00 [running]> on host de-zoomcamp.us-central1-a.c.my-zhe-414813.internal
[2024-04-04T13:42:18.529+0000] {taskinstance.py:2513} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='conrad_coding_test' AIRFLOW_CTX_TASK_ID='task_2_spark' AIRFLOW_CTX_EXECUTION_DATE='2024-04-04T13:42:13.382085+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-04-04T13:42:13.382085+00:00'
[2024-04-04T13:42:18.567+0000] {docker.py:359} INFO - Starting docker container from image sparkhome:latest
[2024-04-04T13:42:19.144+0000] {docker.py:429} INFO - Unsetting extraneous env vars (UTC): 13:42:19
[2024-04-04T13:42:19.155+0000] {docker.py:429} INFO - Finished unsetting extraneous env vars (UTC): 13:42:19
[2024-04-04T13:42:19.161+0000] {docker.py:429} INFO - ++ id -u
[2024-04-04T13:42:19.165+0000] {docker.py:429} INFO - + myuid=0
[2024-04-04T13:42:19.165+0000] {docker.py:429} INFO - ++ id -g
[2024-04-04T13:42:19.168+0000] {docker.py:429} INFO - + mygid=0
[2024-04-04T13:42:19.169+0000] {docker.py:429} INFO - + set +e
[2024-04-04T13:42:19.170+0000] {docker.py:429} INFO - ++ getent passwd 0
[2024-04-04T13:42:19.172+0000] {docker.py:429} INFO - + uidentry=root:x:0:0:root:/root:/bin/bash
[2024-04-04T13:42:19.173+0000] {docker.py:429} INFO - + set -e
[2024-04-04T13:42:19.174+0000] {docker.py:429} INFO - + '[' -z root:x:0:0:root:/root:/bin/bash ']'
[2024-04-04T13:42:19.175+0000] {docker.py:429} INFO - + SPARK_CLASSPATH=':/opt/spark/jars/*'
[2024-04-04T13:42:19.175+0000] {docker.py:429} INFO - + grep SPARK_JAVA_OPT_
[2024-04-04T13:42:19.176+0000] {docker.py:429} INFO - + sed 's/[^=]*=\(.*\)/\1/g'
[2024-04-04T13:42:19.180+0000] {docker.py:429} INFO - + sort -t_ -k4 -n
[2024-04-04T13:42:19.181+0000] {docker.py:429} INFO - + env
[2024-04-04T13:42:19.184+0000] {docker.py:429} INFO - + readarray -t SPARK_EXECUTOR_JAVA_OPTS
[2024-04-04T13:42:19.184+0000] {docker.py:429} INFO - + '[' -n '' ']'
[2024-04-04T13:42:19.185+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T13:42:19.185+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T13:42:19.188+0000] {docker.py:429} INFO - + '[' -n '' ']'
[2024-04-04T13:42:19.189+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T13:42:19.189+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T13:42:19.189+0000] {docker.py:429} INFO - + '[' -z x ']'
[2024-04-04T13:42:19.189+0000] {docker.py:429} INFO - + SPARK_CLASSPATH='/opt/spark/conf::/opt/spark/jars/*'
[2024-04-04T13:42:19.190+0000] {docker.py:429} INFO - + case "$1" in
[2024-04-04T13:42:19.190+0000] {docker.py:429} INFO - + echo 'Non-spark-on-k8s command provided, proceeding in pass-through mode...'
[2024-04-04T13:42:19.190+0000] {docker.py:429} INFO - Non-spark-on-k8s command provided, proceeding in pass-through mode...
[2024-04-04T13:42:19.191+0000] {docker.py:429} INFO - + CMD=("$@")
[2024-04-04T13:42:19.191+0000] {docker.py:429} INFO - + exec /usr/bin/tini -s -- python /opt/spark/etl_task_2.py
[2024-04-04T13:42:22.648+0000] {docker.py:429} INFO - WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by org.apache.spark.unsafe.Platform (file:/opt/spark/jars/spark-unsafe_2.12-3.2.1.jar) to constructor java.nio.DirectByteBuffer(long,int)
WARNING: Please consider reporting this to the maintainers of org.apache.spark.unsafe.Platform
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[2024-04-04T13:42:22.649+0000] {docker.py:429} INFO - 
[2024-04-04T13:42:23.530+0000] {docker.py:429} INFO - Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
[2024-04-04T13:42:23.531+0000] {docker.py:429} INFO - Setting default log level to "
[2024-04-04T13:42:23.532+0000] {docker.py:429} INFO - WARN".
[2024-04-04T13:42:23.533+0000] {docker.py:429} INFO - To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
[2024-04-04T13:42:23.533+0000] {docker.py:429} INFO - 
[2024-04-04T13:42:23.895+0000] {docker.py:429} INFO - 24/04/04 13:42:23 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2024-04-04T13:42:36.648+0000] {docker.py:429} INFO - [Stage 0:>                                                          (0 + 1) / 1]
[2024-04-04T13:42:36.916+0000] {docker.py:429} INFO - 
[2024-04-04T13:42:42.034+0000] {taskinstance.py:1149} INFO - Marking task as SUCCESS. dag_id=conrad_coding_test, task_id=task_2_spark, execution_date=20240404T134213, start_date=20240404T134218, end_date=20240404T134242
[2024-04-04T13:42:42.079+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2024-04-04T13:42:42.134+0000] {taskinstance.py:3312} INFO - 1 downstream tasks scheduled from follow-on schedule check
