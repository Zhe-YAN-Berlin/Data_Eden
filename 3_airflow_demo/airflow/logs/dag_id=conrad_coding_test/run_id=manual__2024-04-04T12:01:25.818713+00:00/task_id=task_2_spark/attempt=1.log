[2024-04-04T12:01:35.174+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: conrad_coding_test.task_2_spark manual__2024-04-04T12:01:25.818713+00:00 [queued]>
[2024-04-04T12:01:35.182+0000] {taskinstance.py:1979} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: conrad_coding_test.task_2_spark manual__2024-04-04T12:01:25.818713+00:00 [queued]>
[2024-04-04T12:01:35.182+0000] {taskinstance.py:2193} INFO - Starting attempt 1 of 2
[2024-04-04T12:01:35.201+0000] {taskinstance.py:2217} INFO - Executing <Task(DockerOperator): task_2_spark> on 2024-04-04 12:01:25.818713+00:00
[2024-04-04T12:01:35.212+0000] {standard_task_runner.py:60} INFO - Started process 141714 to run task
[2024-04-04T12:01:35.221+0000] {standard_task_runner.py:87} INFO - Running: ['airflow', 'tasks', 'run', 'conrad_coding_test', 'task_2_spark', 'manual__2024-04-04T12:01:25.818713+00:00', '--job-id', '20', '--raw', '--subdir', 'DAGS_FOLDER/dag_spark_multi_source_test_docker.py', '--cfg-path', '/tmp/tmp2wze_q7q']
[2024-04-04T12:01:35.227+0000] {standard_task_runner.py:88} INFO - Job 20: Subtask task_2_spark
[2024-04-04T12:01:35.284+0000] {task_command.py:423} INFO - Running <TaskInstance: conrad_coding_test.task_2_spark manual__2024-04-04T12:01:25.818713+00:00 [running]> on host de-zoomcamp.us-central1-a.c.my-zhe-414813.internal
[2024-04-04T12:01:35.381+0000] {taskinstance.py:2513} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='conrad_coding_test' AIRFLOW_CTX_TASK_ID='task_2_spark' AIRFLOW_CTX_EXECUTION_DATE='2024-04-04T12:01:25.818713+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-04-04T12:01:25.818713+00:00'
[2024-04-04T12:01:35.418+0000] {docker.py:359} INFO - Starting docker container from image sparkhome:latest
[2024-04-04T12:01:35.968+0000] {docker.py:429} INFO - Unsetting extraneous env vars (UTC): 12:01:35
[2024-04-04T12:01:35.970+0000] {docker.py:429} INFO - Finished unsetting extraneous env vars (UTC): 12:01:35
[2024-04-04T12:01:35.975+0000] {docker.py:429} INFO - ++ id -u
[2024-04-04T12:01:35.978+0000] {docker.py:429} INFO - + myuid=0
[2024-04-04T12:01:35.979+0000] {docker.py:429} INFO - ++ id -g
[2024-04-04T12:01:35.981+0000] {docker.py:429} INFO - + mygid=0
[2024-04-04T12:01:35.981+0000] {docker.py:429} INFO - + set +e
[2024-04-04T12:01:35.982+0000] {docker.py:429} INFO - ++ getent passwd 0
[2024-04-04T12:01:35.983+0000] {docker.py:429} INFO - + uidentry=root:x:0:0:root:/root:/bin/bash
+ set -e
[2024-04-04T12:01:35.984+0000] {docker.py:429} INFO - + '[' -z root:x:0:0:root:/root:/bin/bash ']'
[2024-04-04T12:01:35.984+0000] {docker.py:429} INFO - + SPARK_CLASSPATH=':/opt/spark/jars/*'
[2024-04-04T12:01:35.985+0000] {docker.py:429} INFO - + grep SPARK_JAVA_OPT_
[2024-04-04T12:01:35.985+0000] {docker.py:429} INFO - + sed 's/[^=]*=\(.*\)/\1/g'
[2024-04-04T12:01:35.990+0000] {docker.py:429} INFO - + sort -t_ -k4 -n
+ env
[2024-04-04T12:01:35.991+0000] {docker.py:429} INFO - + readarray -t SPARK_EXECUTOR_JAVA_OPTS
+ '[' -n '' ']'
+ '[' -z ']'
+ '[' -z ']'
[2024-04-04T12:01:35.992+0000] {docker.py:429} INFO - + '[' -n '' ']'
[2024-04-04T12:01:35.992+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T12:01:35.992+0000] {docker.py:429} INFO - + '[' -z ']'
[2024-04-04T12:01:35.993+0000] {docker.py:429} INFO - + '[' -z x ']'
[2024-04-04T12:01:35.993+0000] {docker.py:429} INFO - + SPARK_CLASSPATH='/opt/spark/conf::/opt/spark/jars/*'
[2024-04-04T12:01:35.994+0000] {docker.py:429} INFO - Non-spark-on-k8s command provided, proceeding in pass-through mode...
[2024-04-04T12:01:35.994+0000] {docker.py:429} INFO - + case "$1" in
+ echo 'Non-spark-on-k8s command provided, proceeding in pass-through mode...'
+ CMD=("$@")
+ exec /usr/bin/tini -s -- python /opt/spark/etl_task_2_new.py
[2024-04-04T12:01:36.013+0000] {docker.py:429} INFO - python: can't open file '/opt/spark/etl_task_2_new.py': [Errno 2] No such file or directory
[2024-04-04T12:01:36.267+0000] {taskinstance.py:2731} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/datatalks_jan/anaconda3/lib/python3.11/site-packages/airflow/models/taskinstance.py", line 444, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/datatalks_jan/anaconda3/lib/python3.11/site-packages/airflow/models/taskinstance.py", line 414, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/datatalks_jan/anaconda3/lib/python3.11/site-packages/airflow/providers/docker/operators/docker.py", line 502, in execute
    return self._run_image()
           ^^^^^^^^^^^^^^^^^
  File "/home/datatalks_jan/anaconda3/lib/python3.11/site-packages/airflow/providers/docker/operators/docker.py", line 364, in _run_image
    return self._run_image_with_mounts([*self.mounts, tmp_mount], add_tmp_variable=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/datatalks_jan/anaconda3/lib/python3.11/site-packages/airflow/providers/docker/operators/docker.py", line 437, in _run_image_with_mounts
    raise DockerContainerFailedException(f"Docker container failed: {result!r}", logs=log_lines)
airflow.providers.docker.exceptions.DockerContainerFailedException: Docker container failed: {'StatusCode': 2}
[2024-04-04T12:01:36.279+0000] {taskinstance.py:1149} INFO - Marking task as UP_FOR_RETRY. dag_id=conrad_coding_test, task_id=task_2_spark, execution_date=20240404T120125, start_date=20240404T120135, end_date=20240404T120136
[2024-04-04T12:01:36.299+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 20 for task task_2_spark (Docker container failed: {'StatusCode': 2}; 141714)
[2024-04-04T12:01:36.321+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-04-04T12:01:36.358+0000] {taskinstance.py:3312} INFO - 0 downstream tasks scheduled from follow-on schedule check
